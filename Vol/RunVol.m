
clear
clc

wd = 'C:\Users\Martin\Desktop\EMGVB_REV';
cd(wd)
addpath(genpath('Vol'))
addpath(genpath('VBLab'))

seed = 2024;

load('Make_data\GARCHdata.mat')
Data = mk_train_test_data_vol(GARCH.SPX{:,:},0.8);
setting.Prior = [0,5];

clc

obj = mk_garch_obj('garch',1,0,1);
ml = ml_vol(Data,obj);


%%
clc
Run = 1;

if Run == 1
    Mdl = mcmc_garch_mdl('GarchType',obj.GarchType,'P',obj.P,'O',obj.O,'Q',obj.Q,...
        'ParamsInit',ml.tpar','Prior',{'Normal',setting.Prior});
    pMCMC = MCMC_garch(Mdl,Data.train,'NumMCMC',50000,'SigScale',1,'Verbose',5000);

    pMCMC.Perf.train = garch_perf(pMCMC.Model,Data.train,pMCMC.Params.tpar);
    pMCMC.Perf.test = garch_perf(pMCMC.Model,Data.test,pMCMC.Params.tpar);
end



%%

opt = set_opt(obj.GarchType,ml.tpar);
opt.Verbose = 1;

clc
rng(seed)
pMGVB = Vol_class(Data,...
    'Setting',setting,...
    'P',obj.P,...
    'O',obj.O,...
    'Q',obj.Q,...
    'MeanInit',opt.MeanInit,...
    'GarchType',obj.GarchType,...
    'LearningRate',opt.lr,...     
    'NumSample',opt.nSample,...         
    'MaxPatience',opt.maxPatience ,...     
    'MaxIter',opt.maxiter,...                   
    'SigInitScale',opt.SigInitScale,...     
    'StepAdaptive',opt.stepAdaptive,...     
    'GradientMax',opt.maxGrad,...      
    'GradClipInit',opt.clipInit,...                
    'Verbose',opt.Verbose,...
    'SavePerf',1,...
    'TestSet',1,...
    'useHfunc',opt.useHfunc,...
    'LBPlot',1,...
    'Optimizer','MGVB');

%

clc
rng(seed)
pEMGVB = Vol_class(Data,...
    'Setting',setting,...
    'P',obj.P,...
    'O',obj.O,...
    'Q',obj.Q,...
    'MeanInit',opt.MeanInit,...
    'GarchType',obj.GarchType,...
    'LearningRate',2*opt.lr,...     
    'NumSample',opt.nSample,...         
    'MaxPatience',opt.maxPatience ,...     
    'MaxIter',opt.maxiter,...                   
    'SigInitScale',opt.SigInitScale,...     
    'StepAdaptive',opt.stepAdaptive,...     
    'GradientMax',opt.maxGrad,...      
    'GradClipInit',opt.clipInit,...                
    'Verbose',opt.Verbose,...
    'SavePerf',1,...
    'TestSet',1,...
    'useHfunc',opt.useHfunc,...
    'LBPlot',1,...
    'Optimizer','EMGVB');

%

rng(seed)
pQBVI = Vol_class(Data,...
    'Setting',setting,...
    'P',obj.P,...
    'O',obj.O,...
    'Q',obj.Q,...
    'MeanInit',opt.MeanInit,...
    'GarchType',obj.GarchType,...
    'LearningRate',opt.lr,...     
    'NumSample',opt.nSample,...         
    'MaxPatience',opt.maxPatience ,...     
    'MaxIter',opt.maxiter,...                   
    'SigInitScale',opt.SigInitScale,...     
    'StepAdaptive',opt.stepAdaptive,...     
    'GradientMax',opt.maxGrad,...      
    'GradClipInit',opt.clipInit,...                
    'Verbose',opt.Verbose,...
    'SavePerf',1,...
    'TestSet',1,...
    'useHfunc',opt.useHfunc,...
    'LBPlot',1,...
    'Optimizer','QBVI');

%%

clc
vpa([pEMGVB.Post.LB_max;
pMGVB.Post.LB_max;
pQBVI.Post.LB_max],9)

vpa([pEMGVB.Post.Perf.train;
pMGVB.Post.Perf.train;
pQBVI.Post.Perf.train],9)


%% parameters

fvi = @(x) x.Post.par';
fmc = @(x) x.Params.par';
fml = @(x) x.par';

mat.par = [fvi(pEMGVB);fvi(pMGVB);fvi(pQBVI);fmc(pMCMC);fml(ml)];

%% transf parameters

fvi = @(x) x.Post.tpar';
fmc = @(x) x.Params.tpar';
fml = @(x) x.tpar';

mat.tpar = [fvi(pEMGVB);fvi(pMGVB);fvi(pQBVI);fmc(pMCMC);fml(ml)];


%% performance

pvi = @(x) [x.Post.LB_max,x.Post.Perf.train([1,2,3,5,6]),x.Post.LB_test.LB_max,x.Post.Perf.test([1,2,3,5,6])];
pmc = @(x) [nan,x.Perf.train([1,2,3,5,6]),nan,x.Perf.test([1,2,3,5,6])];
pml = @(x) [nan,ml.perf.train([1,2,3,5,6]),nan,ml.perf.test([1,2,3,5,6])];

mat.perf = [pvi(pEMGVB);pvi(pMGVB);pvi(pQBVI);pmc(pMCMC);pml(ml)];

%% Tables

lbl = mk_lbl(obj);
Tab.all = array2table([mat.par,mat.perf],'VariableNames',lbl);
Tab.par  = array2table(mat.par,'VariableNames',lbl(1:size(mat.par,2)));
Tab.tpar = array2table(mat.tpar,'VariableNames',lbl(1:size(mat.par,2)));
Tab.perf = array2table(mat.perf,'VariableNames',lbl(size(mat.par,2)+1:end));

%% kernel marginals

clear Pl

k = 8;    
Pl.mgvb{1}    = get_xy_distribution(pMGVB,100,k,1);
Pl.emgvb{1}   = get_xy_distribution(pEMGVB,100,k,1);
Pl.qbvi{1}    = get_xy_distribution(pQBVI,100,k,1);
Pl.mc{1}      = get_xy_distribution(pMCMC,100,k,1);

Pl.mgvb{2}     = get_xy_distribution(pMGVB,100,k,0);
Pl.emgvb{2}    = get_xy_distribution(pEMGVB,100,k,0);
Pl.qbvi{2}     = get_xy_distribution(pQBVI,100,k,0);
Pl.mc{2}       = get_xy_distribution(pMCMC,100,k,0);


%% Save

file_name_mat = fullfile('Vol\Save',[obj.GarchName '.mat']);
save(file_name_mat,'obj','ml','Mdl','pMCMC','opt','pMGVB','pEMGVB','pQBVI','mat','Tab','Pl')

file_name_xls = ['Vol\Save\' obj.GarchName '.xlsx'];
writetable(Tab.all,file_name_xls,'Sheet','all')
writetable(Tab.par,file_name_xls,'Sheet','par')
writetable(Tab.tpar,file_name_xls,'Sheet','tpar')
writetable(Tab.perf,file_name_xls,'Sheet','perf')


%%




